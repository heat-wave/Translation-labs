@header {
package task4.testproduction.regex;
}

@members {
}


regexp(String name) -> Tree : r {return new Tree("RegExp \"" + name + "\"", r.get(0));};
r -> Tree : OP r CP rPrime { return new Tree("R", new Tree(OP.get(0)), r.get(0), new Tree(CP.get(0)), rPrime.get(0));}
          | CHAR rPrime { return new Tree("R", new Tree(String.valueOf(CHAR.get(0))), rPrime.get(0));};

rPrime -> Tree : r rPrime {return new Tree("R'", r.get(0), rPrime.get(0));}
               | OR r rPrime { return new Tree("R'", new Tree(OR.get(0)), r.get(0), rPrime.get(0)); }
               | Q rPrime { return new Tree("R'", new Tree("Q", new Tree(Q.get(0))), rPrime.get(0)); }
               | {return new Tree("R'");};

OR : '|';
OP : '(';
CP : ')';
Q : '*' | '+' | '?' ;

CHAR : 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z' |
       'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z'   ;